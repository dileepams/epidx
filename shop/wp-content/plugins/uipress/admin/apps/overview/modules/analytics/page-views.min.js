export function moduleName(){return"page-views"};export function moduleData(){return{props:{cardData:Object,dateRange:Object,translations:Object,editingMode:Boolean,premium:Boolean,analytics:Boolean},data:function(){return{chartData:{labels:["30th July 21","31st July 21","1st August 21","2nd August 21","3rd August 21","4th August 21"],datasets:[{label:"Page Views",fill:!0,data:[12,19,3,5,2,3],backgroundColor:["rgba(12, 92, 239, 0.05)"],borderColor:["rgba(12, 92, 239, 1)"],borderWidth:2,cutout:"0%",spacing:0,borderRadius:0,tension:.2,pointRadius:0}]},cardOptions:this.cardData,loading:!0,numbers:[],startDate:this.dateRange.startDate,GAaccount:this.analytics}},mounted:function(){this.loading=!1,this.getData()},watch:{dateRange:function(t,a){t.startDate==a.startDate&&t.endDate==a.endDate||this.getData()},cardOptions:{handler(t,a){this.$emit("card-change",t)},deep:!0}},computed:{getTheDates(){return this.dateRange},isGAconnected(){return this.analytics},getPostsOnce(){this.getPosts()},formattedPosts(){return this.getPostsOnce,this.recentPosts},getTheType(){let t=this;return t.cardOptions.chartType?t.cardOptions.chartType:"line"},daysDif(){self=this;var t=moment(self.dateRange.startDate);return moment(self.dateRange.endDate).diff(t,"days")+1}},methods:{getData(){let t=this;t.loading=!0,t.isGAconnected?jQuery.ajax({url:uipress_overview_ajax.ajax_url,type:"post",data:{action:"uipress_analytics_get_page_views",security:uipress_overview_ajax.security,dates:t.getTheDates},success:function(a){var e=JSON.parse(a);return e.error?(UIkit.notification(e.error,{pos:"bottom-left",status:"danger"}),void(t.loading=!1)):e.noaccount?(t.GAaccount=!1,void(t.loading=!1)):(t.GAaccount=!0,t.loading=!1,t.chartData=e.dataSet,void(t.numbers=e.numbers))}}):t.loading=!1}},template:'<div class="uip-padding-s uip-position-relative" :accountConnected="isGAconnected">  \t  \t<loading-placeholder v-if="loading == true"></loading-placeholder>  \t\t  <loading-placeholder v-if="loading == true"></loading-placeholder>        <connect-google-analytics @account-connected="getData()" :translations="translations" v-if="loading != true && !isGAconnected"></connect-google-analytics>        <div v-if="!editingMode && loading != true && isGAconnected" >          <div class="uip-flex uip-flex-center uip-margin-bottom-xs">            <div class="uip-margin-right-s uip-text-xxl uip-text-emphasis uip-text-bold">{{numbers.total}}</div>            <div class="uip-background-primary-wash uip-border-round uip-padding-xxs uip-text-bold uip-flex"             :class="{\'uip-background-red-wash\' : numbers.change < 0}">              <span v-if="numbers.change > 0" class="material-icons-outlined" >expand_less</span>              <span v-if="numbers.change < 0" class="material-icons-outlined" >expand_more</span>              {{numbers.change}}%            </div>          </div>          <div class="uip-margin-bottom-m">              <div class="uip-text-muted">{{translations.vsPrevious}} {{daysDif}} {{translations.vsdays}} ({{numbers.total_comparison}})</div>          </div>          <div class="uip-w-100p">            <uip-chart :dates="getTheDates" v-if="loading != true" :type="getTheType" :chartData="chartData"  :gridLines="true" cWidth="200px"></uip-chart>          </div>        </div>        <div v-if="editingMode">            <div class="uip-text-bold uip-margin-bottom-xs" >{{translations.chartType}}</div>            <select class="uip-w-100p" v-model="cardOptions.chartType">                <option value="line">{{translations.lineChart}}</option>                <option value="bar">{{translations.barChart}}</option>            </select>        </div>\t\t </div>'}};export default function(){console.log("Loaded")};