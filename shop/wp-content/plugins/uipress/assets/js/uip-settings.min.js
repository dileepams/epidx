var mediaUploader;const UIPsettingsOptions={data:()=>({loading:!0,screenWidth:window.innerWidth,translations:uipTranslations,masterPrefs:uipMasterPrefs,defaults:uipDefaults,preferences:uipUserPrefs,network:uipNetwork,settingsObject:{menu:{},toolbar:{}},currentModule:"general"}),watch:{},created:function(){window.addEventListener("resize",this.getScreenWidth)},computed:{formattedSettings(){return this.settingsObject}},mounted:function(){this.getOptions()},methods:{getScreenWidth(){this.screenWidth=window.innerWidth},isSmallScreen(){return this.screenWidth<1e3},activeModule(e){this.currentModule=e},getOptions(){let e=this;data={action:"uip_get_options",security:uip_ajax.security,network:this.network},jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:data,success:function(t){data=JSON.parse(t),e.loading=!1,data.error||(e.settingsObject=data.options)}})},saveSettings(){let e=this;data={action:"uip_save_options",security:uip_ajax.security,options:e.settingsObject},jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:data,success:function(t){data=JSON.parse(t),e.loading=!1,data.error?uipNotification(e.translations.somethingWrong):uipNotification(e.translations.settingsSaved)}})},confirmResetSettings(){let e=this;confirm(e.translations.confirmReset)&&e.resetSettings()},resetSettings(){let e=this;data={action:"uip_reset_options",security:uip_ajax.security},jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:data,success:function(t){data=JSON.parse(t),e.loading=!1,data.error?uipNotification(e.translations.somethingWrong):(uipNotification(data.message),e.getOptions())}})},exportSettings(){self=this,ALLoptions=JSON.stringify(self.settingsObject);var e=new Date,t=String(e.getDate()).padStart(2,"0"),i=String(e.getMonth()+1).padStart(2,"0"),s=e.getFullYear();date_today=i+"_"+t+"_"+s,filename="uip-settings-"+date_today+".json";var a="data:text/json;charset=utf-8,"+encodeURIComponent(ALLoptions),n=document.getElementById("uip-export-settings");n.setAttribute("href",a),n.setAttribute("download",filename),n.click()},importSettings(){self=this;var e=jQuery("#uip-import-settings")[0].files[0];if("application/json"==e.type)if(e.size>1e5)uipNotification(self.translations.fileToBig);else{var t=document.getElementById("uip-import-settings").files[0],i=new FileReader;i.readAsText(t,"UTF-8"),i.onload=function(e){json_settings=e.target.result,parsed=JSON.parse(json_settings),null!=parsed?(self.settingsObject=parsed,uipNotification(self.translations.settingsImported)):uipNotification(self.translations.somethingWrong)}}else uipNotification(self.translations.notValidJson)}}},UIPsettings=uipVue.createApp(UIPsettingsOptions);UIPsettings.component("settings-menu",{props:{translations:Object,alloptions:Object,updatemodule:Function,activemodule:String},data:function(){return{loading:!0,settings:this.alloptions}},watch:{alloptions:{handler(e,t){this.settings=e},deep:!0}},mounted:function(){this.loading=!1},computed:{returnSettings(){return this.settings}},template:'<template v-for="cat in returnSettings">      <div class="uip-flex uip-margin-bottom-xxs" v-if="cat.module_name">          <a v-if="cat.label" href="#" @click="updatemodule(cat.module_name)"           class="uip-link-muted uip-text-m uip-no-outline uip-text-bold uip-no-underline uip-flex uip-padding-xxs uip-border-round hover:uip-background-muted uip-flex-grow"          :class="{\'uip-text-emphasis uip-background-muted\' : cat.module_name == activemodule}">            <span class="material-icons-outlined uip-margin-right-xs">{{cat.icon}}</span>            {{cat.label}}          </a>      </div>    </template>'}),UIPsettings.component("output-options",{props:{translations:Object,alloptions:Object,activemodule:String},data:function(){return{loading:!0,settings:this.alloptions}},watch:{alloptions:function(e,t){this.settings=e}},mounted:function(){this.loading=!1},computed:{returnSettings(){return this.settings}},methods:{getDataFromComp:(e,t)=>t,chooseImage(e){self=this,(mediaUploader=wp.media.frames.file_frame=wp.media({title:self.translations.chooseImage,button:{text:self.translations.chooseImage},multiple:!1})).on("select",function(){var t=mediaUploader.state().get("selection").first().toJSON();e.value=t.url}),mediaUploader.open()}},template:'<output-licence :appData="alloptions" :translations="translations" v-if="activemodule == \'general\' "></output-licence>    <template v-for="cat in returnSettings">      <div v-if="cat.module_name == activemodule" v-for="(option, index) in cat.options">        <div class="uip-flex uip-margin-bottom-l">          <div class="uip-w-300">            <div class="uip-text-bold uip-text-l uip-margin-bottom-xs uip-text-normal">{{option.name}}</div>            <div class="uip-text-muted">{{option.description}}</div>          </div>          <div class="uip-flex-grow uip-padding-left-l" v-if="option.premium == true && alloptions.dataConnect == !true">            <premium-feature :translations="translations"></premium-feature>          </div>          <div class="uip-flex-grow uip-padding-left-l" v-else>            \x3c!-- SWITCH --\x3e            <div v-if="option.type == \'switch\'" >              <label class="uip-switch">                <input type="checkbox" v-model="option.value">                <span class="uip-slider"></span>              </label>            </div>            \x3c!-- SWITCH --\x3e            \x3c!-- COLOR --\x3e            <div v-if="option.type == \'color\'" class="uip-margin-bottom-m uip-padding-xxs uip-background-default uip-border-round uip-w-200">              <div class="uip-flex uip-flex-center">                <span class="uip-margin-right-xs uip-text-muted uip-margin-right-s">                    <label class="uip-border-circle uip-h-18 uip-w-18 uip-border uip-display-block" v-bind:style="{\'background-color\' : option.value}">                      <input                      type="color"                      v-model="option.value" style="visibility: hidden;">                    </label>                </span>                 <input v-model="option.value" type="search" placeholder="#HEX" class="uip-blank-input uip-margin-right-s " style="min-width:0;">                <span class="uip-text-muted">                    <span class="material-icons-outlined uip-text-muted">color_lens</span>                </span>               </div>            </div>            \x3c!-- COLOR --\x3e            \x3c!-- ROLE SELECT --\x3e            <div v-if="option.type == \'user-role-select\'">              <multi-select :selected="option.value"              :name="translations.chooseUserRole"              :single=\'false\'              :placeholder="translations.searchUserRole"></multi-select>            </div>            \x3c!-- ROLE SELECT --\x3e            \x3c!-- POST TYPE SELECT --\x3e            <div v-if="option.type == \'post-type-select\'">              <multi-select-posts :selected="option.value"              :name="translations.choosePostTypes"              :single=\'false\'              :placeholder="translations.searchPostTypes"></multi-select-posts>            </div>            \x3c!-- POST TYPE SELECT --\x3e            \x3c!-- IMAGE --\x3e            <div v-if="option.type == \'image\'" class="uip-display-inline-block">              <div v-if="!option.value" class="uip-flex uip-flex-center uip-flex-middle uip-background-default uip-border uip-padding-l uip-border-round uip-margin-bottom-xs uip-cursor-pointer" @click="chooseImage(option)">                <span>{{translations.chooseImage}}</span>              </div>              <img v-if="option.value" class="uip-h-150 uip-border-round uip-margin-bottom-xs uip-cursor-pointer" :src="option.value"  @click="chooseImage(option)">              <div class="uip-flex">                <input class="uip-flex-grow uip-margin-right-xs uip-standard-input" type="text" placeholder="URL..." v-model="option.value">                <span class="uip-background-muted material-icons-outlined uip-padding-xxs uip-border-round hover:uip-background-grey uip-cursor-pointer"                @click="option.value = \'\'">delete</span>              </div>            </div>            \x3c!-- IMAGE --\x3e            \x3c!-- TEXT --\x3e            <div v-if="option.type == \'text\'" class="uip-display-inline-block">              <input type="text" v-model="option.value">            </div>            \x3c!-- TEXT --\x3e            \x3c!-- TEXTAREA --\x3e            <div v-if="option.type == \'textarea\'" class="uip-display-inline-block">              <textarea class="uip-w-300 uip-h-150" type="text" v-model="option.value"></textarea>            </div>            \x3c!-- TEXTAREA --\x3e            \x3c!-- CODE --\x3e            <div v-if="option.type == \'code-block\'" class="uip-display-inline-block">              <code-block :language="option.language" :usercode="option.value" @code-change="option.value = getDataFromComp(option.value, $event)"></code-block>            </div>            \x3c!-- CODE --\x3e            \x3c!-- MULTIPLE TEXT --\x3e            <div v-if="option.type == \'multiple-text\'" class="uip-w-300">              <button class="uip-button-default uip-margin-bottom-s" @click="option.value.push(\'\')">              {{translations.addFile}}</button>              <div v-for="(ascript,index) in option.value">                <div class="uip-flex uip-margin-bottom-s">                  <div class="uip-flex-grow">                    <input :placeholder="translations.urlToFile"                     class="uip-standard-input" v-model="option.value[index]" type="text">                  </div>                  <div class="uip-margin-left-xs">                    <span @click="option.value.splice(index, 1)"                    class="uip-background-muted material-icons-outlined uip-padding-xxs uip-border-round hover:uip-background-grey uip-cursor-pointer">delete</span>                  </div>                </div>              </div>            </div>            \x3c!-- MULTIPLE TEXT --\x3e          </div>        </div>      </div>    </template>'});const highlight=e=>{e.textContent=e.textContent,hljs.highlightBlock(e)};let editorOptions={tab:" ".repeat(2)};UIPsettings.component("code-block",{data:function(){return{created:!1,unformatted:this.usercode}},props:{language:String,usercode:String},computed:{returnCode(){return this.unformatted}},mounted:function(){this.testel()},methods:{codeChange(e){this.$emit("code-change",e)},testel(){self=this;const e=this.$el;new CodeJar(e,highlight,editorOptions).onUpdate(e=>{this.codeChange(e)})}},template:'<div class="editor uip-w-400" :class="language"  data-gramm="false">{{returnCode}}</div> '}),UIPsettings.component("output-licence",{props:{translations:Object,appData:Object},data:function(){return{licenceKey:"",connect:uipMasterPrefs.dataConnect}},computed:{isActive(){return this.connect}},mounted:function(){},methods:{checkProLicence(){self=this,jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:{action:"uip_check_licence_key",security:uip_ajax.security,key:self.licenceKey},success:function(e){if(data=JSON.parse(e),data.errorMessage){if(uipNotification(data.errorMessage),data.errors)for(const e in data.errors)cat="**"+e+"** "+data.errors[e],uipNotification(cat)}else 1==data.activated&&(self.connect=!0,uipNotification(data.message))}})},removeLicence(){self=this,jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:{action:"uip_remove_licence_key",security:uip_ajax.security},success:function(e){data=JSON.parse(e),data.errorMessage?uipNotification(data.errorMessage):(self.connect=!1,uipNotification(data.message))}})}},template:'<div class="uip-margin-bottom-l uip-padding-s uip-border-round uip-background-primary-wash">      <div class="uip-margin-bottom-s" v-if="!isActive">        <div class="uip-text-bold uip-text-emphasis uip-text-l uip-margin-bottom-xs">UiPress Pro</div>        <div class="uip-text-muted">{{translations.addProLicence}}</div>      </div>      <div class="uip-flex" v-if="!isActive">        <div class="uip-padding-right-s">          <input v-model="licenceKey" class="uip-w-400" placeholder="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" type="text">        </div>        <div>          <button class="uip-button-primary" type="button" @click="checkProLicence()">{{translations.activate}}</button>        </div>      </div>      <div class="uip-margin-bottom-s" v-if="isActive">        <div class="uip-text-bold uip-text-emphasis uip-text-l uip-margin-bottom-xs">UiPress Pro</div>        <div class="uip-text-muted">{{translations.isActivated}}</div>      </div>      <div class="uip-flex" v-if="isActive">        <div>          <button class="uip-button-primary" type="button" @click="removeLicence()">{{translations.removeLicence}}</button>        </div>      </div>    </div>'}),UIPsettings.component("multi-select-posts",{data:function(){return{thisSearchInput:"",options:[],ui:{dropOpen:!1}}},props:{selected:Array,name:String,placeholder:String,single:Boolean},computed:{formattedOptions(){return this.options}},methods:{getPostTypes(){self=this,jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:{action:"uip_get_post_types",security:uip_ajax.security},success:function(e){data=JSON.parse(e),data.error?uipNotification(data.error):self.options=data}})},addSelected(e,t){1==this.single?t[0]=e:t.push(e)},removeSelected(e,t){const i=t.indexOf(e);i>-1&&(t=t.splice(i,1))},ifSelected:(e,t)=>!(t.indexOf(e)>-1),ifInSearch:(e,t)=>(item=e.toLowerCase(),string=t.toLowerCase(),!!item.includes(string)),onClickOutside(e){const t=e.path||(e.composedPath?e.composedPath():void 0);!t||t.includes(this.$el)||this.$el.contains(e.target)||this.closeThisComponent()},openThisComponent(){this.ui.dropOpen=!0,this.getPostTypes(),requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.ui.dropOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)}},template:'<div class="uip-position-relative" @click="openThisComponent">      <div class="uip-margin-bottom-xs uip-padding-left-xxs uip-padding-right-xxs uip-padding-top-xxs uip-background-default uip-border uip-border-round uip-w-400 uip-cursor-pointer uip-h-32 uip-border-box">         <div class="uip-flex uip-flex-center">          <div class="uip-flex-grow uip-margin-right-s">            <div v-if="selected.length < 1" style="margin-top:2px;">              <span class="uk-text-meta">{{name}}...</span>            </div>            <span v-if="selected.length > 0" v-for="select in selected" class="uip-background-primary-wash uip-border-round uip-padding-xxs uip-display-inline-block uip-margin-right-xxs uip-margin-bottom-xxs">              <div class="uip-text-normal">                {{select}}                <span class="uip-margin-left-xxs" href="#" @click="removeSelected(select,selected)">x</span>              </div>            </span>          </div>          <span class="material-icons-outlined uip-text-muted">expand_more</span>        </div>      </div>      <div v-if="ui.dropOpen" class="uip-position-absolute uip-padding-s uip-background-default uip-border-round uip-border uip-shadow uip-w-400 uip-border-box uip-z-index-9">        <div class="uip-flex uip-background-muted uip-padding-xxs uip-margin-bottom-s uip-border-round">          <span class="material-icons-outlined uip-text-muted uip-margin-right-xs">search</span>          <input class="uip-blank-input uip-flex-grow" type="search"            :placeholder="placeholder" v-model="thisSearchInput" autofocus>        </div>        <div class="">          <template v-for="option in formattedOptions">            <span class="uip-background-muted uip-border-round uip-padding-xxs uip-display-inline-block uip-margin-right-xxs uip-margin-bottom-xxs uip-text-normal"             @click="addSelected(option.name, selected)"             v-if="ifSelected(option.name, selected) && ifInSearch(option.name, thisSearchInput)"             style="cursor: pointer">            {{option.label}}            </span>          </template>        </div>      </div>    </div>'}),UIPsettings.component("multi-select",{data:function(){return{thisSearchInput:"",options:[],ui:{dropOpen:!1}}},props:{selected:Array,name:String,placeholder:String,single:Boolean},watch:{thisSearchInput:function(e,t){self=this,e.length>0&&jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:{action:"uip_get_users_and_roles",security:uip_ajax.security,searchString:e},success:function(e){data=JSON.parse(e),data.error?UIkit.notification(data.error,{pos:"bottom-left",status:"danger"}):self.options=data.roles}})}},methods:{addSelected(e,t){1==this.single?t[0]=e:t.push(e)},removeSelected(e,t){const i=t.indexOf(e);i>-1&&(t=t.splice(i,1))},ifSelected:(e,t)=>!(t.indexOf(e)>-1),ifInSearch:(e,t)=>(item=e.toLowerCase(),string=t.toLowerCase(),!!item.includes(string)),onClickOutside(e){const t=e.path||(e.composedPath?e.composedPath():void 0);!t||t.includes(this.$el)||this.$el.contains(e.target)||this.closeThisComponent()},openThisComponent(){this.ui.dropOpen=!0,requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.ui.dropOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)}},template:'<div class="uip-position-relative" @click="openThisComponent">      <div class="uip-margin-bottom-xs uip-padding-left-xxs uip-padding-right-xxs uip-padding-top-xxs uip-background-default uip-border uip-border-round uip-w-400 uip-cursor-pointer uip-h-32 uip-border-box">         <div class="uip-flex uip-flex-center">          <div class="uip-flex-grow uip-margin-right-s">            <div v-if="selected.length < 1" style="margin-top:2px;">              <span class="uk-text-meta">{{name}}...</span>            </div>            <span v-if="selected.length > 0" v-for="select in selected" class="uip-background-primary-wash uip-border-round uip-padding-xxs uip-display-inline-block uip-margin-right-xxs uip-margin-bottom-xxs">              <div class="uip-text-normal">                {{select}}                <span class="uip-margin-left-xxs" href="#" @click="removeSelected(select,selected)">x</span>              </div>            </span>          </div>          <span class="material-icons-outlined uip-text-muted">expand_more</span>        </div>      </div>      <div v-if="ui.dropOpen" class="uip-position-absolute uip-padding-s uip-background-default uip-border uip-border-round uip-shadow uip-w-400 uip-border-box uip-z-index-9">        <div class="uip-flex uip-background-muted uip-padding-xxs uip-margin-bottom-s uip-border-round">          <span class="material-icons-outlined uip-text-muted uip-margin-right-xs">search</span>          <input class="uip-blank-input uip-flex-grow" type="search"            :placeholder="placeholder" v-model="thisSearchInput" autofocus>        </div>        <div class="">          <template v-for="option in options">            <span  class="uip-background-muted uip-border-round uip-padding-xxs uip-display-inline-block uip-margin-right-xxs uip-margin-bottom-xxs uip-text-normal"             @click="addSelected(option.name, selected)"             v-if="ifSelected(option.name, selected) && ifInSearch(option.name, thisSearchInput)"             style="cursor: pointer">            {{option.label}}            </span>          </template>        </div>      </div>    </div>'}),UIPsettings.component("premium-feature",{props:{translations:Object},data:function(){return{loading:!0}},mounted:function(){},methods:{},template:'<a href="https://uipress.co/pricing/" target="_BLANK" class="uip-no-underline uip-padding-xs uip-border-round uip-background-primary-wash uip-text-bold uip-text-emphasis uip-display-inline-block">        <div class="uip-flex">  \t    <span class="material-icons-outlined uip-margin-right-xs">redeem</span>    \t  <span>    \t\t  {{translations.preFeature}}    \t  </span>        </div>  \t</a>'}),jQuery("#uip-settings").length>0&&UIPsettings.mount("#uip-settings");